// Advanced Azure AD Password Protection Monitoring and Analytics
// Version 2.2 - Fixed table references
// Purpose: Comprehensive monitoring of password protection events, policy compliance, and security insights

let TimeRange = 30d;
let LookbackWindow = ago(TimeRange);

SecurityEvent
| where TimeGenerated > LookbackWindow
| where Source contains "Microsoft-AzureADPasswordProtection-DCAgent"
| where EventID in (
    // Policy Management
    "10014",  // Policy applied successfully
    "10015",  // Policy update available
    "10016",  // Policy update failed
    // Password Validation
    "30002",  // Password validation success
    "30004",  // Password validation failure
    "30026",  // Password validation details
    // Agent Status
    "10024",  // Agent started
    "30008",  // Agent health check
    "30010",  // Agent configuration update
    "30028",  // Agent service status
    "30024",  // Agent registration status
    // Error Events
    "30003",  // General error
    "30005",  // Critical error
    "30027",  // Service error
    "30022",  // Configuration error
    // Operational Events
    "30007",  // Operation completed
    "10025",  // Service state change
    "30009",  // System event
    "30029",  // Resource usage
    "30023"   // Maintenance activity
)
| extend 
    ComputerName = Computer,
    DomainName = split(Computer, '\\')[0],
    EventSeverity = case(
        EventID in ("30005", "30027", "30022"), "Critical",
        EventID in ("30003", "10016", "30004"), "Error",
        EventID in ("10015", "30026", "30028"), "Warning",
        "Information"
    ),
    EventCategory = case(
        EventID in ("10014", "10015", "10016"), "Policy Management",
        EventID in ("30002", "30004", "30026"), "Password Validation",
        EventID in ("10024", "30008", "30010", "30028", "30024"), "Agent Operations",
        EventID in ("30003", "30005", "30027", "30022"), "System Errors",
        EventID in ("30007", "10025", "30009", "30029", "30023"), "Maintenance",
        "Unknown"
    )
| summarize 
    EventCount = count(),
    DistinctComputers = dcount(ComputerName),
    DistinctUsers = dcount(TargetUserName),
    CriticalEvents = countif(EventSeverity == "Critical"),
    ErrorEvents = countif(EventSeverity == "Error"),
    FailedPasswordAttempts = countif(EventID == "30004"),
    SuccessfulPasswordAttempts = countif(EventID == "30002"),
    ConfigurationUpdates = countif(EventID == "30010"),
    HealthChecks = countif(EventID == "30008"),
    ServiceIssues = countif(EventID in ("30028", "30024")),
    LastEvent = max(TimeGenerated)
    by bin(TimeGenerated, 1h), 
       EventCategory,
       ComputerName,
       DomainName
| extend
    TimeStamp = format_datetime(TimeGenerated, 'yyyy-MM-dd HH:mm:ss'),
    ComplianceRate = iff(
        FailedPasswordAttempts + SuccessfulPasswordAttempts > 0,
        round((todouble(SuccessfulPasswordAttempts) / todouble(FailedPasswordAttempts + SuccessfulPasswordAttempts)) * 100, 2),
        null
    ),
    AgentStatus = case(
        datetime_diff('minute', now(), LastEvent) > 60, "Critical",
        ServiceIssues > 0, "Warning",
        "Healthy"
    ),
    SuspiciousActivity = iff(
        FailedPasswordAttempts > 10 and FailedPasswordAttempts > (FailedPasswordAttempts + SuccessfulPasswordAttempts) * 0.5,
        true,
        false
    )
| project
    TimeStamp,
    TimeGenerated,
    EventCategory,
    ComputerName,
    DomainName,
    EventCount,
    DistinctUsers,
    ComplianceRate,
    AgentStatus,
    CriticalEvents,
    ErrorEvents,
    SuspiciousActivity,
    HealthChecks,
    ConfigurationUpdates
| order by TimeGenerated desc
